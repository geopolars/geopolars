[build-system]
requires = ["maturin>=1,<2"]
build-backend = "maturin"

[project]
name = "geopolars"
version = "0.1.0-alpha.4"
dependencies = [
  # Minimum version with binary dtype
  "polars>=0.14.19",
  "pyarrow>=4.0",
  "numpy >= 1.16.0",
  "importlib_resources; python_version < '3.11'",
  # For easy interop with geoarrow
  "shapely >= 2.0",
  "pyogrio >= 0.5",
]
requires-python = ">=3.8"
description = "Geospatial extensions for Polars"
readme = "README.md"
# Specify SPDX expression in Cargo.toml instead of here
# https://maturin.rs/metadata.html#add-spdx-license-expressions
# license = "MIT"
authors = [{ name = "Kyle Barron" }, { name = "Stuart Lynn" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Scientific/Engineering :: GIS",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Rust",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[project.urls]
repository = "https://github.com/geopolars/geopolars"

[tool.maturin]
python-source = "python"
module-name = "geopolars._geopolars"

[tool.isort]
profile = "black"
known_first_party = ["geopolars"]

[tool.mypy]
check_untyped_defs = true
files = ["python/**/*.py", "tests/**/*.py"]
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
  "pyarrow.*",
  "geopandas.*",
  "importlib_resources.*",
  "shapely.*",
  "pyogrio.*",
  "pyproj.*",
]
ignore_missing_imports = true

[tool.poe.tasks]
build = "poetry run maturin build --release -o dist"
build-debug = "poetry run maturin build -o dist"
build-with-proj = "poetry run maturin build --release -o dist --features \"proj\""
copy-proj-data = "poetry run python copy-proj-data.py"
clippy = "cargo clippy -- -D warnings"
develop = "poetry run maturin develop"
develop-release = "poetry run maturin develop --release"
test-python = "poetry run python -m pytest tests/unit/"
test-rust = "cargo test"
test = [
  "test-python",
  # Uncomment when we have rust tests
  # "test-rust"
]

[tool.poetry]
name = "geopolars"
version = "0.1.0-alpha.4"
description = "Geospatial extensions for Polars"
authors = ["Kyle Barron"]

[tool.poetry.dependencies]
python = "^3.8"
# Runtime dependencies must also be declared in [project] for maturin

# Minimum version with binary dtype
polars = ">=0.14.19"
pyarrow = ">=4"
numpy = ">=1.16.0"
importlib_resources = { version = "*", python = "<3.11" }
# For easy interop with geoarrow
shapely = "^2"
pyogrio = "^0.6"
geopandas = "^0.13.2"

# TODO: create separate docs group
[tool.poetry.group.dev.dependencies]
# Docs
mkdocs = "^1.4.3"
mkdocs-material = "^9.1.16"
mike = "^1.1.2"
mkdocstrings = {version = "^0.22.0", extras = ["python"]}
pillow = "^9.5.0"
cairosvg = "^2.7.0"

# Tooling
maturin = "^1.1.0"
pytest = "^7.3.2"
mypy = "^1.3.0"
black = "^23.3.0"
# Pinned to match pre-commit
ruff = "0.0.272"
isort = "^5.12.0"
pandas-stubs = "^2.0.2.230605"
poethepoet = "^0.20.0"
# Ipython has had issues with autocompletions in later releases
ipython = "8.8.0"


[tool.ruff]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "UP",  # pyupgrade
  # "D",   # pydocstyle
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
