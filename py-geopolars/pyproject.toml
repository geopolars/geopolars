[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "geopolars"
version = "0.1.0-alpha.4"
description = "Geospatial extensions for Polars"
authors = ["Kyle Barron"]
license = "MIT"
readme = "README.md"
packages = [{ include = "geopolars" }]
repository = "https://github.com/geopolars/geopolars"
documentation = "https://geopolars.org/lonboard/latest/"
keywords = ["GIS"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: GIS",
]

[tool.poetry.dependencies]
python = "^3.9"

polars = "^1.3"
arro3-core = "^0.2.1"
arro3-compute = "^0.2.1"


[tool.poetry.extras]
cli = ["click", "pyogrio", "shapely"]
geopandas = ["geopandas", "pandas", "shapely"]

[tool.poetry.group.dev.dependencies]
ruff = ">=0.6.1"
shapely = "^2"
pyogrio = ">=0.9"
geopandas = "^1"
ipykernel = "^6.29.5"
pyarrow = "^17.0.0"
geoarrow-types = "^0.2.0"
geoarrow-pyarrow = "^0.1.2"

pre-commit = "^3.4.0"
pytest = "^7.4.2"
geoarrow-rust-core = "^0.2.0"
geodatasets = "^2023.12.0"
duckdb = "^0.10.2"

[tool.poetry.group.docs.dependencies]
# We use ruff format ourselves, but mkdocstrings requires black to be installed
# to format signatures in the docs
black = "^23.10.1"
griffe-inherited-docstrings = "^1.0.0"
mkdocs = "^1.4.3"
mkdocs-material = { version = "^9.5", extras = ["imaging"] }
mkdocstrings = { version = "^0.25.1", extras = ["python"] }
# This version only on 3.9+. Ok because it's a dev dependency
mkdocs-jupyter = { version = "^0.24.5", python = "^3.9" }
mike = "^2"

[tool.ruff]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "UP",  # pyupgrade
  "SIM", # simplify
  "ARG", # unused arguments
  "PTH", # use pathlib
  "NPY", # numpy-specific rules
  "RUF", # ruff-specific rules
  "W",
]

[tool.ruff.pydocstyle]
convention = "google"


[tool.ruff.extend-per-file-ignores]
"__init__.py" = [
  "F401", # Allow unused imports in __init__.py files
]


[project]
name = "geopolars"
version = "0.1.0-alpha.4"
dependencies = [
  # Minimum version with binary dtype
  "polars>=0.14.19",
  "pyarrow>=4.0",
  "numpy >= 1.16.0",
  "importlib_resources; python_version < '3.11'",
  # For easy interop with geoarrow
  "shapely >= 2.0",
  "pyogrio >= 0.5",
]
requires-python = ">=3.8"
description = "Geospatial extensions for Polars"
readme = "README.md"
# Specify SPDX expression in Cargo.toml instead of here
# https://maturin.rs/metadata.html#add-spdx-license-expressions
# license = "MIT"
authors = [{ name = "Kyle Barron" }, { name = "Stuart Lynn" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Scientific/Engineering :: GIS",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Rust",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[project.urls]
repository = "https://github.com/geopolars/geopolars"

[tool.maturin]
python-source = "python"
module-name = "geopolars._geopolars"

[tool.isort]
profile = "black"
known_first_party = ["geopolars"]

[tool.mypy]
check_untyped_defs = true
files = ["python/**/*.py", "tests/**/*.py"]
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
  "pyarrow.*",
  "geopandas.*",
  "importlib_resources.*",
  "shapely.*",
  "pyogrio.*",
  "pyproj.*",
  "geopolars._geopolars.*",
]
ignore_missing_imports = true
