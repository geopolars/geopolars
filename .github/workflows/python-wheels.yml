name: Build Python Wheels

# Only run on new tags starting with `v`
on:
  push:
    # tags:
    #   - "v*"

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.0
        env:
          CIBW_SKIP: "cp2* cp35* cp36* pp* *win32 *i686 *musllinux*"
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
          CIBW_BEFORE_ALL: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"
          CIBW_BEFORE_ALL_MACOS: "rustup target add aarch64-apple-darwin"
        with:
          package-dir: py-geopolars

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

    # Revisit if we want to have aarch linux wheels
    #   - if: runner.os == 'Linux'
    #     name: Set up QEMU
    #     id: qemu
    #     uses: docker/setup-qemu-action@v1
    #     with:
    #       image: tonistiigi/binfmt:latest
    #       platforms: arm64

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build sdist
        run: |
          pip install -U build
          cd py-geopolars && python -m build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: py-geopolars/dist/*.tar.gz

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   # Make sure we only run this on new tags/release
  #   if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_PASSWORD }}
  #         # To test: repository_url: https://test.pypi.org/legacy/
