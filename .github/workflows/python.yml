name: Python

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint-rust:
    name: Lint Rust code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: py-geopolars

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Install protobuf
        run: |
          sudo apt-get install libprotobuf-dev protobuf-compiler

      - name: rustfmt
        run: |
          cargo fmt --all -- --check

      - name: clippy
        run: |
          cargo clippy --all --all-features

      - name: check
        run: |
          cargo check --all --all-features

  lint-python:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: run pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files

  test-python:
    name: Build and test Python
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.10"]
    defaults:
      run:
        working-directory: py-geopolars

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          override: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'py-geopolars/build.requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r build.requirements.txt

      - name: Run type checking
        run: |
          mypy --config-file pyproject.toml

      - name: Run tests
        env:
          RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
        run: |
          make venv
          source ./venv/bin/activate
          make test
          deactivate

      # - name: Check doc examples
      #   run: |
      #     cd py-polars && make doctest

      # # test if we can import polars without any requirements
      # - name: Import polars
      #   run: |
      #     pip uninstall pandas -y
      #     python -c "import polars"
