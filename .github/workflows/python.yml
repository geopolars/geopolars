name: Python

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint-rust:
    name: Lint Rust code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: py-geopolars

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2

      - name: Install protobuf
        run: |
          sudo apt-get install libprotobuf-dev protobuf-compiler libgeos-dev

      - name: rustfmt
        run: |
          cargo fmt --all -- --check

      - name: clippy
        run: |
          cargo clippy --all --all-features

      - name: check
        run: |
          cargo check --all --all-features

  # lint-python:
  #   name: Lint Python code
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Python 3.8
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.8"

  #     - name: run pre-commit
  #       run: |
  #         python -m pip install pre-commit
  #         pre-commit run --all-files

  # test-python:
  #   name: Build and test Python
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       python-version: ["3.8", "3.11"]
  #   defaults:
  #     run:
  #       working-directory: py-geopolars

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: stable
  #         override: true

  #     - uses: Swatinem/rust-cache@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         virtualenvs-create: true
  #         virtualenvs-in-project: true
  #         installer-parallel: true

  #     - name: Install dependencies
  #       run: |
  #         poetry install

  #     - name: Run type checking
  #       run: |
  #         poetry run mypy --config-file pyproject.toml

  #     - name: Run tests
  #       env:
  #         RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
  #       run: |
  #         poetry run maturin develop
  #         poetry run pytest tests/unit
